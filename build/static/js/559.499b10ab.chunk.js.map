{"version":3,"file":"static/js/559.499b10ab.chunk.js","mappings":"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","sources":["components/checkbox/Radio.js","components/field/Field.js","components/field/FieldCheckboxes.js","components/input/Input.js","components/label/Label.js","components/label/LabelStatus.js","module/category/CategoryAddNew.js","module/dashboard/DashboardHeading.js"],"sourcesContent":["import React from \"react\";\nimport { useController } from \"react-hook-form\";\n\nconst Radio = ({ checked, children, control, name, ...rest }) => {\n  const { field } = useController({\n    control,\n    name,\n    defaultValue: \"\",\n  });\n  return (\n    <label>\n      <input\n        checked={checked}\n        type=\"radio\"\n        className=\"hidden-input\"\n        {...field}\n        {...rest}\n      />\n      <div className=\"flex items-center gap-x-3 font-medium cursor-pointer\">\n        <div\n          className={`w-7 h-7 rounded-full border flex items-center justify-center p-1  ${\n            checked\n              ? \"bg-primary border-primary text-white\"\n              : \"border-gray-200 text-transparent\"\n          }`}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M5 13l4 4L19 7\"\n            />\n          </svg>\n        </div>\n        <span>{children}</span>\n      </div>\n    </label>\n  );\n};\n\nexport default Radio;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst FieldStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  row-gap: 10px;\n  margin-bottom: 25px;\n`;\nconst Field = ({ children }) => {\n  return <FieldStyles>{children}</FieldStyles>;\n};\n\nexport default Field;\n","import React from \"react\";\n\nconst FieldCheckboxes = ({ children }) => {\n  return <div className=\"flex flex-wrap gap-5\">{children}</div>;\n};\n\nexport default FieldCheckboxes;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useController } from \"react-hook-form\";\nimport PropTypes from \"prop-types\";\n\nconst InputStyles = styled.div`\n  position: relative;\n  width: 100%;\n  input {\n    width: 100%;\n    padding: ${(props) =>\n      props.hasIcon ? \"16px 60px 16px 20px\" : \"16px 20px\"};\n    background-color: transparent;\n    border: 1px solid ${(props) => props.theme.grayf1};\n    border-radius: 8px;\n    transition: all 0.2s linear;\n    color: ${(props) => props.theme.black};\n    font-size: 14px;\n  }\n  input::-webkit-input-placeholder {\n    color: #b2b3bd;\n  }\n  input::-moz-input-placeholder {\n    color: #b2b3bd;\n  }\n  .input-icon {\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    cursor: pointer;\n  }\n`;\n/**\n *\n * @param {*} placeholder(optional) - Placeholder of input\n * @param {*} name(optional) - name of input\n * @param {*} control - control from react hook form\n * @returns Input\n */\nconst Input = ({ name = \"\", type = \"text\", children, control, ...props }) => {\n  const { field } = useController({\n    control,\n    name,\n    defaultValue: \"\",\n  });\n  return (\n    <InputStyles hasIcon={children ? true : false}>\n      <input id={name} type={type} {...field} {...props} />\n      {children ? <div className=\"input-icon\">{children}</div> : null}\n    </InputStyles>\n  );\n};\nInput.propTypes = {\n  // value: PropTypes.string\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  children: PropTypes.any,\n  control: PropTypes.any.isRequired,\n};\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LabelStyles = styled.label`\n  color: ${(props) => props.theme.gray4b};\n  font-weight: 500;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nconst Label = ({ htmlFor = \"\", children, ...props }) => {\n  return (\n    <LabelStyles htmlFor={htmlFor} {...props}>\n      {children}\n    </LabelStyles>\n  );\n};\n\nexport default Label;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst LabelStatusStyles = styled.span`\n  display: inline-block;\n  padding: 10px 15px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n`;\n/**\n *\n * @param type - \"default\" \"success\" \"warning\" \"danger\"\n * @returns\n */\nconst LabelStatus = ({ children, type = \"default\" }) => {\n  let styleClassName = \"text-gray-500 bg-gray-100\";\n  switch (type) {\n    case \"success\":\n      styleClassName = \"text-green-500 bg-green-100\";\n      break;\n    case \"warning\":\n      styleClassName = \"text-orange-500 bg-orange-100\";\n      break;\n    case \"danger\":\n      styleClassName = \"text-red-500 bg-red-100\";\n      break;\n\n    default:\n      break;\n  }\n  return (\n    <LabelStatusStyles className={styleClassName}>{children}</LabelStatusStyles>\n  );\n};\nLabelStatus.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.oneOf([\"default\", \"success\", \"warning\", \"danger\"]).isRequired,\n};\nexport default LabelStatus;\n","import { Button } from \"components/button\";\nimport { Radio } from \"components/checkbox\";\nimport { Field, FieldCheckboxes } from \"components/field\";\nimport { Input } from \"components/input\";\nimport { Label } from \"components/label\";\nimport { useAuth } from \"contexts/auth-context\";\nimport { db } from \"firebase-app/firebase-config\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport slugify from \"slugify\";\nimport Swal from \"sweetalert2\";\nimport { categoryStatus, userRole } from \"utils/constants\";\n\nconst CategoryAddNew = () => {\n  const {\n    control,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { isValid, isSubmitting },\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      name: \"\",\n      slug: \"\",\n      status: 1,\n      createdAt: new Date(),\n    },\n  });\n  const { userInfo } = useAuth();\n  const handleAddNewCategory = async (values) => {\n    if (!isValid) return;\n    if (userInfo?.role !== userRole.ADMIN) {\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\n      return;\n    }\n    const newValues = { ...values };\n    newValues.slug = slugify(newValues.name || newValues.slug, {\n      lower: true,\n    });\n    newValues.status = Number(newValues.status);\n    const colRef = collection(db, \"categories\");\n    try {\n      await addDoc(colRef, {\n        ...newValues,\n        createdAt: serverTimestamp(),\n      });\n      toast.success(\"Create new category successfully!\");\n    } catch (error) {\n      toast.error(error.message);\n    } finally {\n      reset({\n        name: \"\",\n        slug: \"\",\n        status: 1,\n        createdAt: new Date(),\n      });\n    }\n  };\n  const watchStatus = watch(\"status\");\n  return (\n    <div>\n      <DashboardHeading\n        title=\"New category\"\n        desc=\"Add new category\"\n      ></DashboardHeading>\n      <form\n        onSubmit={handleSubmit(handleAddNewCategory)}\n        autoComplete=\"off\n      \"\n      >\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Name</Label>\n            <Input\n              control={control}\n              name=\"name\"\n              placeholder=\"Enter your category name\"\n              required\n            ></Input>\n          </Field>\n          <Field>\n            <Label>Slug</Label>\n            <Input\n              control={control}\n              name=\"slug\"\n              placeholder=\"Enter your slug\"\n            ></Input>\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Status</Label>\n            <FieldCheckboxes>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === categoryStatus.APPROVED}\n                value={categoryStatus.APPROVED}\n              >\n                Approved\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === categoryStatus.UNAPPROVED}\n                value={categoryStatus.UNAPPROVED}\n              >\n                Unapproved\n              </Radio>\n            </FieldCheckboxes>\n          </Field>\n        </div>\n        <Button\n          kind=\"primary\"\n          className=\"mx-auto w-[200px]\"\n          type=\"submit\"\n          disabled={isSubmitting}\n          isLoading={isSubmitting}\n        >\n          Add new category\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default CategoryAddNew;\n","import React from \"react\";\n\nconst DashboardHeading = ({ title = \"\", desc = \"\", children }) => {\n  return (\n    <div className=\"mb-10 flex items-start justify-between\">\n      <div>\n        <h1 className=\"dashboard-heading\">{title}</h1>\n        <p className=\"dashboard-short-desc\">{desc}</p>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default DashboardHeading;\n"],"names":["checked","children","control","name","rest","field","useController","defaultValue","type","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","FieldStyles","styled","InputStyles","props","hasIcon","theme","grayf1","black","id","LabelStyles","gray4b","htmlFor","LabelStatusStyles","styleClassName","useForm","mode","defaultValues","slug","status","createdAt","Date","handleSubmit","watch","reset","formState","isValid","isSubmitting","userInfo","useAuth","handleAddNewCategory","values","role","userRole","Swal","newValues","slugify","lower","Number","colRef","collection","db","addDoc","serverTimestamp","toast","message","watchStatus","title","desc","onSubmit","autoComplete","I","placeholder","required","categoryStatus","value","kind","disabled","isLoading"],"sourceRoot":""}