{"version":3,"file":"static/js/952.48a0a322.chunk.js","mappings":"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","sources":["pages/PageNotFound.js","module/post/PostRelated.js","components/author/AuthorBox.js","module/post/PostCommentItem.js","pages/PostComment.js","pages/PostDetailsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nconst PageNotFoundStyles = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: ${(props) => props.theme.black};\n  color: white;\n  .page-content {\n    max-width: 1000px;\n    margin: 0 auto;\n    text-align: center;\n  }\n  .logo {\n    display: inline-block;\n    margin-bottom: 40px;\n  }\n  .heading {\n    font-size: 60px;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  .description {\n    max-width: 800px;\n    margin: 0 auto 40px;\n  }\n  .back {\n    display: inline-block;\n    padding: 15px 30px;\n    color: white;\n    background-image: linear-gradient(\n      to right top,\n      ${(props) => props.theme.primary},\n      ${(props) => props.theme.secondary}\n    );\n    border-radius: 8px;\n    font-weight: 500;\n  }\n  .image {\n    max-width: 250px;\n    margin: 0 auto 40px;\n  }\n`;\n\nconst PageNotFound = () => {\n  const navigate = useNavigate();\n  return (\n    <PageNotFoundStyles>\n      <div className=\"page-content\">\n        <img src=\"/404.png\" alt=\"notfound\" className=\"image\" />\n        <h1 className=\"heading\">404 - Looks like you're lost.</h1>\n        <p className=\"description\">\n          Maybe this page used to exist or you just spelled something wrong.\n          Chances are your spelled something wrong, so can you double check the\n          URL?\n        </p>\n        <button onClick={() => navigate(\"/\")} className=\"back\">\n          Go back\n        </button>\n      </div>\n    </PageNotFoundStyles>\n  );\n};\n\nexport default PageNotFound;\n","import Heading from \"components/layout/Heading\";\nimport { db } from \"firebase-app/firebase-config\";\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport PostItem from \"./PostItem\";\nconst PostRelated = ({ categoryId = \"\" }) => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const docRef = query(\n      collection(db, \"posts\"),\n      where(\"categoryId\", \"==\", categoryId)\n    );\n    onSnapshot(docRef, (snapshot) => {\n      const results = [];\n      snapshot.forEach((doc) => {\n        results.push({\n          id: doc.id,\n          ...doc.data(),\n        });\n      });\n      setPosts(results);\n    });\n  }, [categoryId]);\n  if (!categoryId || posts.length <= 0) return null;\n  return (\n    <div className=\"post-related mx-auto\">\n      <Heading>Bài viết liên quan</Heading>\n      <div className=\"grid-layout grid-layout--primary\">\n        {posts.map((item) => (\n          <PostItem key={item.id} data={item}></PostItem>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostRelated;\n","import { db } from \"firebase-app/firebase-config\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\n\nconst AuthorBox = ({ userId = \"\" }) => {\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    async function fetchUserData() {\n      const docRef = doc(db, \"users\", userId);\n      const docSnapshot = await getDoc(docRef);\n      if (docSnapshot.data()) {\n        setUser(docSnapshot.data());\n      }\n    }\n    fetchUserData();\n  }, [userId]);\n  if (!userId || !user.username) return null;\n  return (\n    <div className=\"author\">\n      <div className=\"author-image\">\n        <img src={user?.avatar} alt=\"\" />\n      </div>\n      <div className=\"author-content\">\n        <h3 className=\"author-name\">{user?.fullname}</h3>\n        <p className=\"author-desc\">{user?.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthorBox;\n","import { db } from \"firebase-app/firebase-config\";\nimport { deleteDoc, doc } from \"firebase/firestore\";\nimport React from \"react\";\nimport Moment from \"react-moment\";\n\nconst PostCommentItem = (props) => {\n  const { comment, user, postId } = props;\n  // delete comment firebase\n  const handleDeleteComment = async (id) => {\n    const confirm = window.confirm(\"Are you sure to delete this comment?\");\n    if (confirm && user.uid === comment?.userId) {\n      try {\n        await deleteDoc(doc(db, \"posts\", postId, \"comments\", id));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return (\n    <div className=\"post-comment__item\">\n      <div className=\"post-comment__item__avatar\">\n        <img src={comment.avatar} alt=\"\" />\n      </div>\n      <div className=\"post-comment__item__content relative mb-5\">\n        <div className=\"post-comment__item__content__info\">\n          <h4 className=\"post-comment__item__content__info__name\">\n            {comment.username}\n          </h4>\n          <span className=\"post-comment__item__content__info__date\">\n            <Moment className=\"text-sm\" fromNow>\n              {comment.timestamp?.toDate()}\n            </Moment>\n          </span>\n        </div>\n        <div className=\"post-comment__item__content__text flex flex-col gap-y-5\">\n          <p>{comment.comment}</p>\n          <div className=\"post-comment__action absolute right-0 top-[100%] z-10\">\n            {user?.uid === comment?.userId && (\n              <button\n                className=\"btn-action\"\n                onClick={() => handleDeleteComment(comment.id)}\n              >\n                Xóa\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCommentItem;\n","import { Button } from \"components/button\";\nimport { db } from \"firebase-app/firebase-config\";\nimport {\n  addDoc,\n  collection,\n  onSnapshot,\n  serverTimestamp,\n} from \"firebase/firestore\";\nimport PostCommentItem from \"module/post/PostCommentItem\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport styled from \"styled-components\";\nconst PostCommentStyles = styled.div`\n  .post-comment {\n    max-width: 1000px;\n    margin: 100px auto;\n    &__heading {\n      margin-bottom: 2rem;\n      font-weight: 600;\n    }\n    &__form {\n      margin-bottom: 2rem;\n      form {\n        .form-group {\n          textarea {\n            width: 100%;\n            height: 200px;\n            border: 1px solid #ccc;\n            border-radius: 8px;\n            padding: 1rem;\n            resize: none;\n          }\n        }\n      }\n    }\n    &__list {\n      .post-comment__item {\n        display: flex;\n        align-items: flex-start;\n        margin-bottom: 2rem;\n        border-radius: 8px;\n        &:last-child {\n          margin-bottom: 0;\n        }\n        &__avatar {\n          margin-right: 1rem;\n          width: 52px;\n          height: 52px;\n          img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            border-radius: 100rem;\n          }\n        }\n        &__content {\n          padding: 1rem;\n          background-color: ${(props) => props.theme.grayF3};\n          border-radius: 8px;\n          box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n          flex: 1;\n          &__info {\n            display: flex;\n            align-items: center;\n            margin-bottom: 1rem;\n            &__name {\n              font-weight: 600;\n              margin-right: 1rem;\n            }\n            &__date {\n              color: #999;\n            }\n          }\n          &__text {\n            p {\n              color: #333;\n            }\n          }\n        }\n      }\n    }\n  }\n  .btn {\n    display: block;\n    margin-left: auto;\n    &--primary {\n      background-color: ${(props) => props.theme.primary};\n      color: #fff;\n      padding: 1rem 2rem;\n      border-radius: 8px;\n      border: none;\n      cursor: pointer;\n      transition: all 0.3s;\n      &:hover {\n        background-color: ${(props) => props.theme.primary};\n        color: #fff;\n        opacity: 0.8;\n      }\n    }\n    &-action {\n      border: none;\n      color: ${(props) => props.theme.black};\n      transform: translate(-50%, 50%);\n    }\n  }\n  @media screen and (max-width: 1023.98px) {\n    .post-comment {\n      &__form {\n        form {\n          .form-group {\n            textarea {\n              height: 100px;\n            }\n          }\n        }\n      }\n    }\n    &__list {\n      .post-comment__item {\n        &__avatar {\n          max-width: 40px;\n          margin-right: 1rem;\n        }\n      }\n    }\n    .btn {\n      &--primary {\n        padding: 15px 20px;\n      }\n    }\n  }\n`;\n\nconst PostComment = ({ postId, user }) => {\n  const [comment, setComment] = React.useState(\"\");\n  const [comments, setComments] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  useEffect(() => {\n    const docRef = collection(db, \"posts\", postId, \"comments\");\n    onSnapshot(docRef, (snapshot) => {\n      const comments = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setComments(comments);\n    });\n  }, [postId]);\n  const sendComment = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const commentTosend = comment;\n    setComment(\"\");\n    await addDoc(collection(db, \"posts\", postId, \"comments\"), {\n      comment: commentTosend,\n      username: user.fullname,\n      avatar: user.avatar,\n      userId: user.uid,\n      timestamp: serverTimestamp(),\n    });\n    setLoading(false);\n  };\n\n  return (\n    <PostCommentStyles>\n      <div className=\"post-comment\">\n        <div className=\"post-comment__heading\">\n          <h3 className=\"heading\">Bình luận</h3>\n        </div>\n        <div className=\"post-comment__form\">\n          <form>\n            <div className=\"form-group\">\n              <textarea\n                placeholder=\"Nhập bình luận của bạn\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n              ></textarea>\n            </div>\n            <div className=\"form-group\">\n              <Button\n                type=\"submit\"\n                onClick={sendComment}\n                className=\"btn btn--primary\"\n                isLoading={loading}\n                disabled={!comment.trim()}\n              >\n                Gửi bình luận\n              </Button>\n            </div>\n          </form>\n        </div>\n        {comments.length > 0 && (\n          <div className=\"post-comment__list\">\n            {comments.map((comment) => (\n              <PostCommentItem\n                key={comment.id}\n                comment={comment}\n                user={user}\n                postId={postId}\n              ></PostCommentItem>\n            ))}\n          </div>\n        )}\n      </div>\n    </PostCommentStyles>\n  );\n};\n\nexport default PostComment;\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport PostRelated from \"module/post/PostRelated\";\nimport PostMeta from \"module/post/PostMeta\";\nimport PostImage from \"module/post/PostImage\";\nimport PostCategory from \"module/post/PostCategory\";\nimport PageNotFound from \"./PageNotFound\";\nimport Layout from \"components/layout/Layout\";\nimport AuthorBox from \"components/author/AuthorBox\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { db } from \"firebase-app/firebase-config\";\nimport {\n  collection,\n  onSnapshot,\n  query,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"contexts/auth-context\";\nimport { userRole } from \"utils/constants\";\nimport PostComment from \"./PostComment\";\nconst PostDetailsPageStyles = styled.div`\n  padding-bottom: 100px;\n  .post {\n    &-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: 40px;\n      margin: 40px 0;\n    }\n    &-feature {\n      width: 100%;\n      max-width: 640px;\n      height: 466px;\n      border-radius: 20px;\n    }\n    &-heading {\n      font-weight: bold;\n      font-size: 36px;\n      margin-bottom: 16px;\n    }\n    &-info {\n      flex: 1;\n    }\n    &-content {\n      max-width: 800px;\n      margin: 80px auto;\n    }\n  }\n  .author {\n    margin-top: 40px;\n    margin-bottom: 80px;\n    display: flex;\n    border-radius: 20px;\n    background-color: ${(props) => props.theme.grayF3};\n    &-image {\n      width: 200px;\n      height: 200px;\n      flex-shrink: 0;\n      border-radius: inherit;\n    }\n    &-image img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      border-radius: inherit;\n    }\n    &-content {\n      flex: 1;\n      padding: 20px;\n    }\n    &-name {\n      font-weight: bold;\n      margin-bottom: 10px;\n      font-size: 20px;\n    }\n    &-desc {\n      font-size: 14px;\n      line-height: 2;\n    }\n  }\n  @media screen and (max-width: 1023.98px) {\n    padding-bottom: 40px;\n    .post {\n      &-header {\n        flex-direction: column;\n      }\n      &-feature {\n        height: auto;\n      }\n      &-heading {\n        font-size: 26px;\n      }\n      &-content {\n        margin: 40px 0;\n      }\n    }\n    .author {\n      flex-direction: column;\n      &-image {\n        width: 100%;\n        height: auto;\n      }\n    }\n  }\n`;\n\nconst PostDetailsPage = () => {\n  const { slug } = useParams();\n  const [postInfo, setPostInfo] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      if (!slug) return;\n      const colRef = query(collection(db, \"posts\"), where(\"slug\", \"==\", slug));\n      onSnapshot(colRef, (snapshot) => {\n        snapshot.forEach((doc) => {\n          doc.data() &&\n            setPostInfo({\n              id: doc.id,\n              ...doc.data(),\n            });\n        });\n      });\n    }\n    fetchData();\n  }, [slug]);\n  useEffect(() => {\n    document.body.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  }, [slug]);\n  const { userInfo } = useAuth();\n  if (!slug) return <PageNotFound></PageNotFound>;\n  if (!postInfo.title) return null;\n  const { user } = postInfo;\n  const date = postInfo?.createdAt?.seconds\n    ? new Date(postInfo?.createdAt?.seconds * 1000)\n    : new Date();\n  const formatDate = new Date(date).toLocaleDateString(\"vi-VI\");\n  return (\n    <PostDetailsPageStyles>\n      <Layout>\n        <div className=\"container\">\n          <div className=\"post-header\">\n            <PostImage\n              url={postInfo.image}\n              className=\"post-feature\"\n            ></PostImage>\n            <div className=\"post-info\">\n              <PostCategory className=\"mb-6\" to={postInfo.category?.slug}>\n                {postInfo.category?.name}\n              </PostCategory>\n              <h1 className=\"post-heading\">{postInfo.title}</h1>\n              <PostMeta\n                authorName={postInfo.user.fullname}\n                date={formatDate}\n              ></PostMeta>\n              {/* Check if user role is ADMIN then can edit the post */}\n              {userInfo?.role === userRole.ADMIN && (\n                <Link\n                  to={`/manage/update-post?id=${postInfo.id}`}\n                  className=\"inline-block px-4 py-2 mt-5 text-sm border border-gray-400 rounded-md\"\n                >\n                  Edit post\n                </Link>\n              )}\n            </div>\n          </div>\n          <div className=\"post-content\">\n            <div\n              className=\"entry-content\"\n              // Prevent XSS Attack recommen from React Docs\n              dangerouslySetInnerHTML={{\n                __html: postInfo.content || \"\",\n              }}\n            ></div>\n            <AuthorBox userId={user.id}></AuthorBox>\n          </div>\n          <PostRelated categoryId={postInfo?.category?.id}></PostRelated>\n          <PostComment postId={postInfo?.id} user={userInfo}></PostComment>\n        </div>\n      </Layout>\n    </PostDetailsPageStyles>\n  );\n};\n\nexport default PostDetailsPage;\n"],"names":["PageNotFoundStyles","styled","props","theme","black","primary","secondary","navigate","useNavigate","className","src","alt","onClick","categoryId","useState","posts","setPosts","useEffect","docRef","query","collection","db","where","onSnapshot","snapshot","results","forEach","doc","push","id","data","length","Heading","map","item","PostItem","userId","user","setUser","getDoc","docSnapshot","fetchUserData","username","avatar","fullname","description","comment","postId","handleDeleteComment","window","confirm","uid","deleteDoc","console","log","fromNow","timestamp","toDate","PostCommentStyles","grayF3","React","setComment","comments","setComments","loading","setLoading","docs","sendComment","e","preventDefault","commentTosend","addDoc","serverTimestamp","placeholder","value","onChange","target","type","isLoading","disabled","trim","PostDetailsPageStyles","slug","useParams","postInfo","setPostInfo","colRef","fetchData","document","body","scrollIntoView","behavior","block","userInfo","useAuth","PageNotFound","title","date","createdAt","seconds","Date","formatDate","toLocaleDateString","Layout","PostImage","url","image","PostCategory","to","category","name","PostMeta","authorName","role","userRole","dangerouslySetInnerHTML","__html","content"],"sourceRoot":""}