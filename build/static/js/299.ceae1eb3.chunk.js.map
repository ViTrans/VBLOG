{"version":3,"file":"static/js/299.ceae1eb3.chunk.js","mappings":"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","sources":["config/apiConfig.js","module/post/PostUpdate.js"],"sourcesContent":["export const imgbbAPI = `https://api.imgbb.com/1/upload?key=${\"cfe71e9e26a59994e591b6744b110c0f\"}`;\n","import { Button } from \"components/button\";\nimport { Radio } from \"components/checkbox\";\nimport { Dropdown } from \"components/dropdown\";\nimport { Field, FieldCheckboxes } from \"components/field\";\nimport ImageUpload from \"components/image/ImageUpload\";\nimport { Input } from \"components/input\";\nimport { Label } from \"components/label\";\nimport Toggle from \"components/toggle/Toggle\";\nimport { db } from \"firebase-app/firebase-config\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\nimport useFirebaseImage from \"hooks/useFirebaseImage\";\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { postStatus, userRole } from \"utils/constants\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { toast } from \"react-toastify\";\nimport ImageUploader from \"quill-image-uploader\";\nimport axios from \"axios\";\nimport { imgbbAPI } from \"config/apiConfig\";\nimport slugify from \"slugify\";\nimport { useAuth } from \"contexts/auth-context\";\nimport Swal from \"sweetalert2\";\nQuill.register(\"modules/imageUploader\", ImageUploader);\n\nconst PostUpdate = () => {\n  const { userInfo } = useAuth();\n  const [params] = useSearchParams();\n  const postId = params.get(\"id\");\n  const [content, setContent] = useState(\"\");\n  const {\n    handleSubmit,\n    control,\n    setValue,\n    watch,\n    reset,\n    getValues,\n    formState: { isValid, isSubmitting },\n  } = useForm({\n    mode: \"onChange\",\n  });\n  const imageUrl = getValues(\"image\");\n  const imageName = getValues(\"image_name\");\n  const { image, setImage, progress, handleSelectImage, handleDeleteImage } =\n    useFirebaseImage(setValue, getValues, imageName, deletePostImage);\n  async function deletePostImage() {\n    if (userInfo?.role !== userRole.ADMIN) {\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\n      return;\n    }\n    const colRef = doc(db, \"users\", postId);\n    await updateDoc(colRef, {\n      avatar: \"\",\n    });\n  }\n  useEffect(() => {\n    setImage(imageUrl);\n  }, [imageUrl, setImage]);\n\n  const watchHot = watch(\"hot\");\n  const watchStatus = watch(\"status\");\n  useEffect(() => {\n    async function fetchData() {\n      if (!postId) return;\n      const docRef = doc(db, \"posts\", postId);\n      const docSnapshot = await getDoc(docRef);\n      if (docSnapshot.data()) {\n        reset(docSnapshot.data());\n        setSelectCategory(docSnapshot.data()?.category || \"\");\n        setContent(docSnapshot.data()?.content || \"\");\n      }\n    }\n    fetchData();\n  }, [postId, reset]);\n  const [selectCategory, setSelectCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    async function getCategoriesData() {\n      const colRef = collection(db, \"categories\");\n      const q = query(colRef, where(\"status\", \"==\", 1));\n      const querySnapshot = await getDocs(q);\n      let result = [];\n      querySnapshot.forEach((doc) => {\n        result.push({\n          id: doc.id,\n          ...doc.data(),\n        });\n      });\n      setCategories(result);\n    }\n    getCategoriesData();\n  }, []);\n  const handleClickOption = async (item) => {\n    const colRef = doc(db, \"categories\", item.id);\n    const docData = await getDoc(colRef);\n    setValue(\"category\", {\n      id: docData.id,\n      ...docData.data(),\n    });\n    setSelectCategory(item);\n  };\n  const updatePostHandler = async (values) => {\n    if (!isValid) return;\n    if (\n      userInfo?.role !== userRole.ADMIN &&\n      userInfo?.role !== userRole.MOD &&\n      userInfo?.role !== userRole.USER\n    ) {\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\n      return;\n    }\n    const docRef = doc(db, \"posts\", postId);\n    values.status = Number(values.status);\n    values.slug = slugify(values.slug || values.title, { lower: true });\n    await updateDoc(docRef, {\n      ...values,\n      image,\n      content,\n    });\n    toast.success(\"Update post successfully!\");\n  };\n  const modules = useMemo(\n    () => ({\n      toolbar: [\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\n        [\"blockquote\", \"code-block\"],\n        [{ header: 1 }, { header: 2 }], // custom button values\n        [\n          { list: \"ordered\" },\n          { list: \"bullet\" },\n          { indent: \"-1\" },\n          { indent: \"+1\" },\n          { align: [] },\n        ],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\"link\", \"image\", \"video\"],\n      ],\n      imageUploader: {\n        // imgbbAPI\n        upload: async (file) => {\n          const bodyFormData = new FormData();\n          bodyFormData.append(\"image\", file);\n          const response = await axios({\n            method: \"post\",\n            url: imgbbAPI,\n            data: bodyFormData,\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          });\n          return response.data.data.url;\n        },\n      },\n    }),\n    []\n  );\n  if (!postId) return null;\n  return (\n    <>\n      <DashboardHeading\n        title=\"Update post\"\n        desc=\"Update post content\"\n      ></DashboardHeading>\n      <form onSubmit={handleSubmit(updatePostHandler)}>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Title</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your title\"\n              name=\"title\"\n              required\n            ></Input>\n          </Field>\n          <Field>\n            <Label>Slug</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your slug\"\n              name=\"slug\"\n            ></Input>\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Image</Label>\n            <ImageUpload\n              onChange={handleSelectImage}\n              handleDeleteImage={handleDeleteImage}\n              className=\"h-[250px]\"\n              progress={progress}\n              image={image}\n            ></ImageUpload>\n          </Field>\n          <Field>\n            <Label>Category</Label>\n            <Dropdown>\n              <Dropdown.Select placeholder=\"Select the category\"></Dropdown.Select>\n              <Dropdown.List>\n                {categories.length > 0 &&\n                  categories.map((item) => (\n                    <Dropdown.Option\n                      key={item.id}\n                      onClick={() => handleClickOption(item)}\n                    >\n                      {item.name}\n                    </Dropdown.Option>\n                  ))}\n              </Dropdown.List>\n            </Dropdown>\n            {selectCategory?.name && (\n              <span className=\"inline-block p-3 text-sm font-medium text-green-600 rounded-lg bg-green-50\">\n                {selectCategory?.name}\n              </span>\n            )}\n          </Field>\n        </div>\n        <div className=\"mb-10\">\n          <Field>\n            <Label>Content</Label>\n            <div className=\"w-full entry-content\">\n              <ReactQuill\n                modules={modules}\n                theme=\"snow\"\n                value={content}\n                onChange={setContent}\n              />\n            </div>\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Feature post</Label>\n            <Toggle\n              on={watchHot === true}\n              onClick={() => setValue(\"hot\", !watchHot)}\n            ></Toggle>\n          </Field>\n          <Field>\n            <Label>Status</Label>\n            <FieldCheckboxes>\n              {userInfo?.role === userRole.ADMIN && (\n                <Radio\n                  name=\"status\"\n                  control={control}\n                  checked={Number(watchStatus) === postStatus.APPROVED}\n                  value={postStatus.APPROVED}\n                >\n                  Approved\n                </Radio>\n              )}\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.PENDING}\n                value={postStatus.PENDING}\n              >\n                Pending\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.REJECTED}\n                value={postStatus.REJECTED}\n              >\n                Reject\n              </Radio>\n            </FieldCheckboxes>\n          </Field>\n        </div>\n        <Button\n          type=\"submit\"\n          className=\"mx-auto w-[250px]\"\n          isLoading={isSubmitting}\n          disabled={isSubmitting}\n        >\n          Update post\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default PostUpdate;\n"],"names":["imgbbAPI","Quill","ImageUploader","userInfo","useAuth","useSearchParams","postId","get","useState","content","setContent","useForm","mode","handleSubmit","control","setValue","watch","reset","getValues","formState","isValid","isSubmitting","imageUrl","imageName","useFirebaseImage","image","setImage","progress","handleSelectImage","handleDeleteImage","role","userRole","Swal","colRef","doc","db","updateDoc","avatar","useEffect","watchHot","watchStatus","docRef","getDoc","docSnapshot","data","setSelectCategory","category","fetchData","selectCategory","categories","setCategories","collection","q","query","where","getDocs","querySnapshot","result","forEach","push","id","getCategoriesData","handleClickOption","item","docData","updatePostHandler","values","status","Number","slug","slugify","title","lower","toast","modules","useMemo","toolbar","header","list","indent","align","imageUploader","upload","file","bodyFormData","FormData","append","axios","method","url","headers","response","DashboardHeading","desc","onSubmit","className","I","placeholder","name","required","ImageUpload","onChange","length","map","onClick","theme","value","Toggle","on","checked","postStatus","type","isLoading","disabled"],"sourceRoot":""}