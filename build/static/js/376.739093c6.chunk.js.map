{"version":3,"file":"static/js/376.739093c6.chunk.js","mappings":"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","sources":["module/post/PostManage.js"],"sourcesContent":["import { ActionDelete, ActionEdit, ActionView } from \"components/action\";\r\nimport { Button } from \"components/button\";\r\nimport { LabelStatus } from \"components/label\";\r\nimport { Table } from \"components/table\";\r\nimport { useAuth } from \"contexts/auth-context\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport {\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  query,\r\n  startAfter,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { debounce } from \"lodash\";\r\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { postStatus, userRole } from \"utils/constants\";\r\n\r\nconst POST_PER_PAGE = 10;\r\n\r\nconst PostManage = () => {\r\n  const [postList, setPostList] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [lastDoc, setLastDoc] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const navigate = useNavigate();\r\n  const { userInfo } = useAuth();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const colRef = collection(db, \"posts\");\r\n      const newRef = filter\r\n        ? query(\r\n            colRef,\r\n            where(\"title\", \">=\", filter),\r\n            where(\"title\", \"<=\", filter + \"utf8\")\r\n          )\r\n        : query(colRef, limit(POST_PER_PAGE));\r\n      const documentSnapshots = await getDocs(newRef);\r\n      const lastVisible =\r\n        documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n      onSnapshot(colRef, (snapshot) => {\r\n        setTotal(snapshot.size);\r\n      });\r\n\r\n      onSnapshot(newRef, (snapshot) => {\r\n        let results = [];\r\n        snapshot.forEach((doc) => {\r\n          results.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        setPostList(results);\r\n      });\r\n      setLastDoc(lastVisible);\r\n    }\r\n    fetchData();\r\n  }, [filter]);\r\n  async function handleDeletePost(postId) {\r\n    const docRef = doc(db, \"posts\", postId);\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed && userInfo?.role === userRole.ADMIN) {\r\n        await deleteDoc(docRef);\r\n        Swal.fire(\"Deleted!\", \"Your post has been deleted.\", \"success\");\r\n      } else {\r\n        Swal.fire(\"Failed!\", \"You have no right to delete post\", \"warning\");\r\n      }\r\n    });\r\n  }\r\n  const renderPostStatus = (status) => {\r\n    switch (status) {\r\n      case postStatus.APPROVED:\r\n        return <LabelStatus type=\"success\">Approved</LabelStatus>;\r\n      case postStatus.PENDING:\r\n        return <LabelStatus type=\"warning\">Pending</LabelStatus>;\r\n      case postStatus.REJECTED:\r\n        return <LabelStatus type=\"danger\">Rejected</LabelStatus>;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleSearchPost = debounce((e) => {\r\n    setFilter(e.target.value);\r\n  }, 250);\r\n  const handleLoadMorePost = async () => {\r\n    const nextRef = query(\r\n      collection(db, \"posts\"),\r\n      startAfter(lastDoc || 0),\r\n      limit(POST_PER_PAGE)\r\n    );\r\n\r\n    onSnapshot(nextRef, (snapshot) => {\r\n      let results = [];\r\n      snapshot.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPostList([...postList, ...results]);\r\n    });\r\n    const documentSnapshots = await getDocs(nextRef);\r\n    const lastVisible =\r\n      documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n    setLastDoc(lastVisible);\r\n  };\r\n  // const { userInfo } = useAuth();\r\n  // if (userInfo.role !== userRole.ADMIN) return null;\r\n  if (userInfo.role !== userRole.ADMIN && userInfo.role !== userRole.MOD)\r\n    return null;\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"All posts\"\r\n        desc=\"Manage all posts\"\r\n      ></DashboardHeading>\r\n      <div className=\"flex justify-end gap-5 mb-10\">\r\n        <div className=\"w-full max-w-[300px]\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full p-4 border border-gray-300 border-solid rounded-lg\"\r\n            placeholder=\"Search post...\"\r\n            onChange={handleSearchPost}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Post</th>\r\n            <th>Category</th>\r\n            <th>Author</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {postList.length > 0 &&\r\n            postList.map((post) => {\r\n              const date = post?.createdAt?.seconds\r\n                ? new Date(post?.createdAt?.seconds * 1000)\r\n                : new Date();\r\n              const formatDate = new Date(date).toLocaleDateString(\"vi-VI\");\r\n\r\n              return (\r\n                <tr key={post.id}>\r\n                  <td>{post.id?.slice(0, 5) + \"...\"}</td>\r\n                  <td className=\"!pr-[100px]\">\r\n                    <div className=\"flex items-center gap-x-3\">\r\n                      <img\r\n                        src={post.image}\r\n                        alt=\"\"\r\n                        className=\"w-[66px] h-[55px] rounded object-cover\"\r\n                      />\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"font-semibold\">{post.title}</h3>\r\n                        <time className=\"text-sm text-gray-500\">\r\n                          Date: {formatDate}\r\n                        </time>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"text-gray-500\">{post.category?.name}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"text-gray-500\">{post.user?.username}</span>\r\n                  </td>\r\n                  <td>{renderPostStatus(post.status)}</td>\r\n                  <td>\r\n                    <div className=\"flex items-center text-gray-500 gap-x-3\">\r\n                      <ActionView\r\n                        onClick={() => navigate(`/${post.slug}`)}\r\n                      ></ActionView>\r\n                      <ActionEdit\r\n                        onClick={() =>\r\n                          navigate(`/manage/update-post?id=${post.id}`)\r\n                        }\r\n                      ></ActionEdit>\r\n                      <ActionDelete\r\n                        onClick={() => handleDeletePost(post.id)}\r\n                      ></ActionDelete>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n      {total > postList.length && (\r\n        <div className=\"mt-10 text-center\">\r\n          <Button className=\"mx-auto w-[200px]\" onClick={handleLoadMorePost}>\r\n            Load more\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostManage;\r\n"],"names":["useState","postList","setPostList","filter","setFilter","lastDoc","setLastDoc","total","setTotal","navigate","useNavigate","userInfo","useAuth","postId","docRef","doc","db","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","role","userRole","deleteDoc","useEffect","colRef","collection","newRef","query","where","limit","getDocs","documentSnapshots","lastVisible","docs","length","onSnapshot","snapshot","size","results","forEach","push","id","data","fetchData","renderPostStatus","status","postStatus","type","handleSearchPost","debounce","e","target","value","handleLoadMorePost","nextRef","startAfter","desc","className","placeholder","onChange","map","post","date","createdAt","seconds","Date","formatDate","toLocaleDateString","slice","src","image","alt","category","name","user","username","onClick","slug","handleDeletePost"],"sourceRoot":""}