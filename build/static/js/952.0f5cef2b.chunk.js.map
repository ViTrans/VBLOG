{"version":3,"file":"static/js/952.0f5cef2b.chunk.js","mappings":"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","sources":["pages/PageNotFound.js","module/post/PostRelated.js","components/author/AuthorBox.js","module/post/PostCommentItem.js","pages/PostComment.js","pages/PostDetailsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nconst PageNotFoundStyles = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: ${(props) => props.theme.black};\r\n  color: white;\r\n  .page-content {\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n  }\r\n  .logo {\r\n    display: inline-block;\r\n    margin-bottom: 40px;\r\n  }\r\n  .heading {\r\n    font-size: 60px;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n  }\r\n  .description {\r\n    max-width: 800px;\r\n    margin: 0 auto 40px;\r\n  }\r\n  .back {\r\n    display: inline-block;\r\n    padding: 15px 30px;\r\n    color: white;\r\n    background-image: linear-gradient(\r\n      to right top,\r\n      ${(props) => props.theme.primary},\r\n      ${(props) => props.theme.secondary}\r\n    );\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n  }\r\n  .image {\r\n    max-width: 250px;\r\n    margin: 0 auto 40px;\r\n  }\r\n`;\r\n\r\nconst PageNotFound = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <PageNotFoundStyles>\r\n      <div className=\"page-content\">\r\n        <img src=\"/404.png\" alt=\"notfound\" className=\"image\" />\r\n        <h1 className=\"heading\">404 - Looks like you're lost.</h1>\r\n        <p className=\"description\">\r\n          Maybe this page used to exist or you just spelled something wrong.\r\n          Chances are your spelled something wrong, so can you double check the\r\n          URL?\r\n        </p>\r\n        <button onClick={() => navigate(\"/\")} className=\"back\">\r\n          Go back\r\n        </button>\r\n      </div>\r\n    </PageNotFoundStyles>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import Heading from \"components/layout/Heading\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PostItem from \"./PostItem\";\r\nconst PostRelated = ({ categoryId = \"\" }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    const docRef = query(\r\n      collection(db, \"posts\"),\r\n      where(\"categoryId\", \"==\", categoryId)\r\n    );\r\n    onSnapshot(docRef, (snapshot) => {\r\n      const results = [];\r\n      snapshot.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPosts(results);\r\n    });\r\n  }, [categoryId]);\r\n  if (!categoryId || posts.length <= 0) return null;\r\n  return (\r\n    <div className=\"post-related mx-auto\">\r\n      <Heading>Bài viết liên quan</Heading>\r\n      <div className=\"grid-layout grid-layout--primary\">\r\n        {posts.map((item) => (\r\n          <PostItem key={item.id} data={item}></PostItem>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostRelated;\r\n","import { db } from \"firebase-app/firebase-config\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst AuthorBox = ({ userId = \"\" }) => {\r\n  const [user, setUser] = useState({});\r\n  useEffect(() => {\r\n    async function fetchUserData() {\r\n      const docRef = doc(db, \"users\", userId);\r\n      const docSnapshot = await getDoc(docRef);\r\n      if (docSnapshot.data()) {\r\n        setUser(docSnapshot.data());\r\n      }\r\n    }\r\n    fetchUserData();\r\n  }, [userId]);\r\n  if (!userId || !user.username) return null;\r\n  return (\r\n    <div className=\"author\">\r\n      <div className=\"author-image\">\r\n        <img src={user?.avatar} alt=\"\" />\r\n      </div>\r\n      <div className=\"author-content\">\r\n        <h3 className=\"author-name\">{user?.fullname}</h3>\r\n        <p className=\"author-desc\">{user?.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorBox;\r\n","import { db } from \"firebase-app/firebase-config\";\r\nimport { deleteDoc, doc } from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst PostCommentItem = (props) => {\r\n  const { comment, user } = props;\r\n  // delete comment firebase\r\n  const handleDeleteComment = async (id, userId) => {\r\n    if (user.uid === userId) {\r\n      try {\r\n        Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You will not be able to recover this imaginary file!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes, delete it!\",\r\n          cancelButtonText: \"No, keep it\",\r\n        }).then(async (result) => {\r\n          if (result.isConfirmed) {\r\n            await deleteDoc(doc(db, \"comments\", id));\r\n            Swal.fire(\r\n              \"Deleted!\",\r\n              \"Your imaginary file has been deleted.\",\r\n              \"success\"\r\n            );\r\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n            Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"You don't have permission to delete this comment\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"post-comment__item\">\r\n      <div className=\"post-comment__item__avatar\">\r\n        <img src={comment.avatar} alt=\"\" />\r\n      </div>\r\n      <div className=\"post-comment__item__content relative mb-5\">\r\n        <div className=\"post-comment__item__content__info\">\r\n          <h4 className=\"post-comment__item__content__info__name\">\r\n            {comment.username}\r\n          </h4>\r\n          <span className=\"post-comment__item__content__info__date\">\r\n            <Moment className=\"text-sm\" fromNow>\r\n              {comment.timestamp?.toDate()}\r\n            </Moment>\r\n          </span>\r\n        </div>\r\n        <div className=\"post-comment__item__content__text flex flex-col gap-y-5\">\r\n          <p>{comment.comment}</p>\r\n          <div className=\"post-comment__action absolute right-0 top-[100%] z-10\">\r\n            {user?.uid === comment?.userId && (\r\n              <button\r\n                className=\"btn-action\"\r\n                onClick={() => handleDeleteComment(comment.id, user.uid)}\r\n              >\r\n                Xóa\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCommentItem;\r\n","import { Button } from \"components/button\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  where,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport PostCommentItem from \"module/post/PostCommentItem\";\r\nimport React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst PostCommentStyles = styled.div`\r\n  .post-comment {\r\n    max-width: 1000px;\r\n    margin: 100px auto;\r\n    &__heading {\r\n      margin-bottom: 2rem;\r\n      font-weight: 600;\r\n    }\r\n    &__form {\r\n      margin-bottom: 2rem;\r\n      form {\r\n        .form-group {\r\n          textarea {\r\n            width: 100%;\r\n            height: 200px;\r\n            border: 1px solid #ccc;\r\n            border-radius: 8px;\r\n            padding: 1rem;\r\n            resize: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    &__list {\r\n      .post-comment__item {\r\n        display: flex;\r\n        align-items: flex-start;\r\n        margin-bottom: 2rem;\r\n        border-radius: 8px;\r\n        &:last-child {\r\n          margin-bottom: 0;\r\n        }\r\n        &__avatar {\r\n          margin-right: 1rem;\r\n          width: 52px;\r\n          height: 52px;\r\n          img {\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: cover;\r\n            border-radius: 100rem;\r\n          }\r\n        }\r\n        &__content {\r\n          padding: 1rem;\r\n          background-color: ${(props) => props.theme.grayF3};\r\n          border-radius: 8px;\r\n          box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n          flex: 1;\r\n          &__info {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-bottom: 1rem;\r\n            &__name {\r\n              font-weight: 600;\r\n              margin-right: 1rem;\r\n            }\r\n            &__date {\r\n              color: #999;\r\n            }\r\n          }\r\n          &__text {\r\n            p {\r\n              color: #333;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .btn {\r\n    display: block;\r\n    margin-left: auto;\r\n    &--primary {\r\n      background-color: ${(props) => props.theme.primary};\r\n      color: #fff;\r\n      padding: 1rem 2rem;\r\n      border-radius: 8px;\r\n      border: none;\r\n      cursor: pointer;\r\n      transition: all 0.3s;\r\n      &:hover {\r\n        background-color: ${(props) => props.theme.primary};\r\n        color: #fff;\r\n        opacity: 0.8;\r\n      }\r\n    }\r\n    &-action {\r\n      border: none;\r\n      color: ${(props) => props.theme.black};\r\n      transform: translate(-50%, 50%);\r\n    }\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    .post-comment {\r\n      &__form {\r\n        form {\r\n          .form-group {\r\n            textarea {\r\n              height: 100px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    &__list {\r\n      .post-comment__item {\r\n        &__avatar {\r\n          max-width: 40px;\r\n          margin-right: 1rem;\r\n        }\r\n      }\r\n    }\r\n    .btn {\r\n      &--primary {\r\n        padding: 15px 20px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostComment = ({ postId, user, postName }) => {\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [comments, setComments] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const q = query(\r\n        collection(db, \"comments\"),\r\n        where(\"postId\", \"==\", postId)\r\n      );\r\n      onSnapshot(q, (querySnapshot) => {\r\n        const results = [];\r\n        querySnapshot.forEach((doc) => {\r\n          results.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        setComments(results);\r\n      });\r\n    };\r\n    getData();\r\n  }, [postId]);\r\n  const sendComment = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const commentTosend = comment;\r\n    setComment(\"\");\r\n    await addDoc(collection(db, \"comments\"), {\r\n      comment: commentTosend,\r\n      username: user.fullname,\r\n      avatar: user.avatar,\r\n      userId: user.uid,\r\n      postId: postId,\r\n      postName: postName,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <PostCommentStyles>\r\n      <div className=\"post-comment\">\r\n        <div className=\"post-comment__heading\">\r\n          <h3 className=\"heading\">Bình luận</h3>\r\n        </div>\r\n        <div className=\"post-comment__form\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                placeholder=\"Nhập bình luận của bạn\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={sendComment}\r\n                className=\"btn btn--primary\"\r\n                isLoading={loading}\r\n                disabled={!comment.trim()}\r\n              >\r\n                Gửi bình luận\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {comments.length > 0 && (\r\n          <div className=\"post-comment__list\">\r\n            {comments.map((comment) => (\r\n              <PostCommentItem\r\n                key={comment.id}\r\n                comment={comment}\r\n                user={user}\r\n              ></PostCommentItem>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </PostCommentStyles>\r\n  );\r\n};\r\n\r\nexport default PostComment;\r\n","import styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PostRelated from \"module/post/PostRelated\";\r\nimport PostMeta from \"module/post/PostMeta\";\r\nimport PostImage from \"module/post/PostImage\";\r\nimport PostCategory from \"module/post/PostCategory\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport Layout from \"components/layout/Layout\";\r\nimport AuthorBox from \"components/author/AuthorBox\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n  addDoc,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"contexts/auth-context\";\r\nimport { userRole } from \"utils/constants\";\r\nimport PostComment from \"./PostComment\";\r\nconst PostDetailsPageStyles = styled.div`\r\n  padding-bottom: 100px;\r\n  .post {\r\n    &-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      gap: 40px;\r\n      margin: 40px 0;\r\n    }\r\n    &-feature {\r\n      width: 100%;\r\n      max-width: 640px;\r\n      height: 466px;\r\n      border-radius: 20px;\r\n    }\r\n    &-heading {\r\n      font-weight: bold;\r\n      font-size: 36px;\r\n      margin-bottom: 16px;\r\n    }\r\n    &-info {\r\n      flex: 1;\r\n    }\r\n    &-content {\r\n      max-width: 800px;\r\n      margin: 80px auto;\r\n    }\r\n  }\r\n  .author {\r\n    margin-top: 40px;\r\n    margin-bottom: 80px;\r\n    display: flex;\r\n    border-radius: 20px;\r\n    background-color: ${(props) => props.theme.grayF3};\r\n    &-image {\r\n      width: 200px;\r\n      height: 200px;\r\n      flex-shrink: 0;\r\n      border-radius: inherit;\r\n    }\r\n    &-image img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      border-radius: inherit;\r\n    }\r\n    &-content {\r\n      flex: 1;\r\n      padding: 20px;\r\n    }\r\n    &-name {\r\n      font-weight: bold;\r\n      margin-bottom: 10px;\r\n      font-size: 20px;\r\n    }\r\n    &-desc {\r\n      font-size: 14px;\r\n      line-height: 2;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    padding-bottom: 40px;\r\n    .post {\r\n      &-header {\r\n        flex-direction: column;\r\n      }\r\n      &-feature {\r\n        height: auto;\r\n      }\r\n      &-heading {\r\n        font-size: 26px;\r\n      }\r\n      &-content {\r\n        margin: 40px 0;\r\n      }\r\n    }\r\n    .author {\r\n      flex-direction: column;\r\n      &-image {\r\n        width: 100%;\r\n        height: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostDetailsPage = () => {\r\n  const { slug } = useParams();\r\n  const [postInfo, setPostInfo] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!slug) return;\r\n      const colRef = query(collection(db, \"posts\"), where(\"slug\", \"==\", slug));\r\n      onSnapshot(colRef, (snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          doc.data() &&\r\n            setPostInfo({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            });\r\n        });\r\n      });\r\n    }\r\n    fetchData();\r\n  }, [slug]);\r\n  useEffect(() => {\r\n    document.body.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  }, [slug]);\r\n  const { userInfo } = useAuth();\r\n  if (!slug) return <PageNotFound></PageNotFound>;\r\n  if (!postInfo.title) return null;\r\n  const { user } = postInfo;\r\n  const date = postInfo?.createdAt?.seconds\r\n    ? new Date(postInfo?.createdAt?.seconds * 1000)\r\n    : new Date();\r\n  const formatDate = new Date(date).toLocaleDateString(\"vi-VI\");\r\n  return (\r\n    <PostDetailsPageStyles>\r\n      <Layout>\r\n        <div className=\"container\">\r\n          <div className=\"post-header\">\r\n            <PostImage\r\n              url={postInfo.image}\r\n              className=\"post-feature\"\r\n            ></PostImage>\r\n            <div className=\"post-info\">\r\n              <PostCategory className=\"mb-6\" to={postInfo.category?.slug}>\r\n                {postInfo.category?.name}\r\n              </PostCategory>\r\n              <h1 className=\"post-heading\">{postInfo.title}</h1>\r\n              <PostMeta\r\n                authorName={postInfo.user.fullname}\r\n                date={formatDate}\r\n              ></PostMeta>\r\n              {/* Check if user role is ADMIN then can edit the post */}\r\n              {userInfo?.role === userRole.ADMIN && (\r\n                <Link\r\n                  to={`/manage/update-post?id=${postInfo.id}`}\r\n                  className=\"inline-block px-4 py-2 mt-5 text-sm border border-gray-400 rounded-md\"\r\n                >\r\n                  Edit post\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">\r\n            <div\r\n              className=\"entry-content\"\r\n              // Prevent XSS Attack recommen from React Docs\r\n              dangerouslySetInnerHTML={{\r\n                __html: postInfo.content || \"\",\r\n              }}\r\n            ></div>\r\n            <AuthorBox userId={user.id}></AuthorBox>\r\n          </div>\r\n          <PostRelated categoryId={postInfo?.category?.id}></PostRelated>\r\n          <PostComment\r\n            postId={postInfo?.id}\r\n            user={userInfo}\r\n            postName={postInfo.title}\r\n          ></PostComment>\r\n        </div>\r\n      </Layout>\r\n    </PostDetailsPageStyles>\r\n  );\r\n};\r\n\r\nexport default PostDetailsPage;\r\n"],"names":["PageNotFoundStyles","styled","props","theme","black","primary","secondary","navigate","useNavigate","className","src","alt","onClick","categoryId","useState","posts","setPosts","useEffect","docRef","query","collection","db","where","onSnapshot","snapshot","results","forEach","doc","push","id","data","length","Heading","map","item","PostItem","userId","user","setUser","getDoc","docSnapshot","fetchUserData","username","avatar","fullname","description","comment","handleDeleteComment","uid","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","deleteDoc","dismiss","error","console","log","fromNow","timestamp","toDate","PostCommentStyles","grayF3","postId","postName","React","setComment","comments","setComments","loading","setLoading","getData","q","querySnapshot","sendComment","e","preventDefault","commentTosend","addDoc","serverTimestamp","placeholder","value","onChange","target","type","isLoading","disabled","trim","PostDetailsPageStyles","slug","useParams","postInfo","setPostInfo","colRef","fetchData","document","body","scrollIntoView","behavior","block","userInfo","useAuth","PageNotFound","date","createdAt","seconds","Date","formatDate","toLocaleDateString","Layout","PostImage","url","image","PostCategory","to","category","name","PostMeta","authorName","role","userRole","dangerouslySetInnerHTML","__html","content"],"sourceRoot":""}