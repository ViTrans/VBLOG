{"version":3,"file":"static/js/559.7efa191e.chunk.js","mappings":"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","sources":["components/checkbox/Radio.js","components/field/Field.js","components/field/FieldCheckboxes.js","components/input/Input.js","module/category/CategoryAddNew.js"],"sourcesContent":["import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst Radio = ({ checked, children, control, name, ...rest }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <label>\r\n      <input\r\n        checked={checked}\r\n        type=\"radio\"\r\n        className=\"hidden-input\"\r\n        {...field}\r\n        {...rest}\r\n      />\r\n      <div className=\"flex items-center gap-x-3 font-medium cursor-pointer\">\r\n        <div\r\n          className={`w-7 h-7 rounded-full border flex items-center justify-center p-1  ${\r\n            checked\r\n              ? \"bg-primary border-primary text-white\"\r\n              : \"border-gray-200 text-transparent\"\r\n          }`}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 13l4 4L19 7\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <span>{children}</span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst FieldStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  row-gap: 10px;\r\n  margin-bottom: 25px;\r\n`;\r\nconst Field = ({ children }) => {\r\n  return <FieldStyles>{children}</FieldStyles>;\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\n\r\nconst FieldCheckboxes = ({ children }) => {\r\n  return <div className=\"flex flex-wrap gap-5\">{children}</div>;\r\n};\r\n\r\nexport default FieldCheckboxes;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useController } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputStyles = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n    padding: ${(props) =>\r\n      props.hasIcon ? \"16px 60px 16px 20px\" : \"16px 20px\"};\r\n    background-color: transparent;\r\n    border: 1px solid ${(props) => props.theme.grayf1};\r\n    border-radius: 8px;\r\n    transition: all 0.2s linear;\r\n    color: ${(props) => props.theme.black};\r\n    font-size: 14px;\r\n  }\r\n  input::-webkit-input-placeholder {\r\n    color: #b2b3bd;\r\n  }\r\n  input::-moz-input-placeholder {\r\n    color: #b2b3bd;\r\n  }\r\n  .input-icon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n/**\r\n *\r\n * @param {*} placeholder(optional) - Placeholder of input\r\n * @param {*} name(optional) - name of input\r\n * @param {*} control - control from react hook form\r\n * @returns Input\r\n */\r\nconst Input = ({ name = \"\", type = \"text\", children, control, ...props }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <InputStyles hasIcon={children ? true : false}>\r\n      <input id={name} type={type} {...field} {...props} />\r\n      {children ? <div className=\"input-icon\">{children}</div> : null}\r\n    </InputStyles>\r\n  );\r\n};\r\nInput.propTypes = {\r\n  // value: PropTypes.string\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  children: PropTypes.any,\r\n  control: PropTypes.any.isRequired,\r\n};\r\nexport default Input;\r\n","import { Button } from \"components/button\";\r\nimport { Radio } from \"components/checkbox\";\r\nimport { Field, FieldCheckboxes } from \"components/field\";\r\nimport { Input } from \"components/input\";\r\nimport { Label } from \"components/label\";\r\nimport { useAuth } from \"contexts/auth-context\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport slugify from \"slugify\";\r\nimport Swal from \"sweetalert2\";\r\nimport { categoryStatus, userRole } from \"utils/constants\";\r\n\r\nconst CategoryAddNew = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    formState: { isValid, isSubmitting },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      name: \"\",\r\n      slug: \"\",\r\n      status: 1,\r\n      createdAt: new Date(),\r\n    },\r\n  });\r\n  const { userInfo } = useAuth();\r\n  const handleAddNewCategory = async (values) => {\r\n    if (!isValid) return;\r\n    if (userInfo?.role !== userRole.ADMIN) {\r\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\r\n      return;\r\n    }\r\n    const newValues = { ...values };\r\n    newValues.slug = slugify(newValues.name || newValues.slug, {\r\n      lower: true,\r\n    });\r\n    newValues.status = Number(newValues.status);\r\n    const colRef = collection(db, \"categories\");\r\n    try {\r\n      await addDoc(colRef, {\r\n        ...newValues,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      toast.success(\"Create new category successfully!\");\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      reset({\r\n        name: \"\",\r\n        slug: \"\",\r\n        status: 1,\r\n        createdAt: new Date(),\r\n      });\r\n    }\r\n  };\r\n  const watchStatus = watch(\"status\");\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"New category\"\r\n        desc=\"Add new category\"\r\n      ></DashboardHeading>\r\n      <form\r\n        onSubmit={handleSubmit(handleAddNewCategory)}\r\n        autoComplete=\"off\r\n      \"\r\n      >\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Name</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"name\"\r\n              placeholder=\"Enter your category name\"\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"slug\"\r\n              placeholder=\"Enter your slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <FieldCheckboxes>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === categoryStatus.APPROVED}\r\n                value={categoryStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === categoryStatus.UNAPPROVED}\r\n                value={categoryStatus.UNAPPROVED}\r\n              >\r\n                Unapproved\r\n              </Radio>\r\n            </FieldCheckboxes>\r\n          </Field>\r\n        </div>\r\n        <Button\r\n          kind=\"primary\"\r\n          className=\"mx-auto w-[200px]\"\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          isLoading={isSubmitting}\r\n        >\r\n          Add new category\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryAddNew;\r\n"],"names":["checked","children","control","name","rest","field","useController","defaultValue","type","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","FieldStyles","styled","InputStyles","props","hasIcon","theme","grayf1","black","id","useForm","mode","defaultValues","slug","status","createdAt","Date","handleSubmit","watch","reset","formState","isValid","isSubmitting","userInfo","useAuth","handleAddNewCategory","values","role","userRole","Swal","newValues","slugify","lower","Number","colRef","collection","db","addDoc","serverTimestamp","toast","message","watchStatus","title","desc","onSubmit","autoComplete","I","placeholder","required","categoryStatus","value","kind","disabled","isLoading"],"sourceRoot":""}