{"version":3,"file":"static/js/462.c523380a.chunk.js","mappings":"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","sources":["module/user/UserTable.js","module/user/UserManage.js"],"sourcesContent":["import { ActionDelete, ActionEdit } from \"components/action\";\r\nimport { LabelStatus } from \"components/label\";\r\nimport { Table } from \"components/table\";\r\nimport { useAuth } from \"contexts/auth-context\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport { collection, deleteDoc, doc, onSnapshot } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\nimport { userRole, userStatus } from \"utils/constants\";\r\n\r\nconst UserTable = () => {\r\n  const [userList, setUserList] = useState([]);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const colRef = collection(db, \"users\");\r\n    onSnapshot(colRef, (snapshot) => {\r\n      const results = [];\r\n      snapshot.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setUserList(results);\r\n    });\r\n  }, []);\r\n  const renderRoleLabel = (role) => {\r\n    switch (role) {\r\n      case userRole.ADMIN:\r\n        return \"Admin\";\r\n      case userRole.MOD:\r\n        return \"Moderator\";\r\n      case userRole.USER:\r\n        return \"User\";\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const renderLabelStatus = (status) => {\r\n    switch (status) {\r\n      case userStatus.ACTIVE:\r\n        return <LabelStatus type=\"success\">Active</LabelStatus>;\r\n      case userStatus.PENDING:\r\n        return <LabelStatus type=\"warning\">Pending</LabelStatus>;\r\n      case userStatus.BAN:\r\n        return <LabelStatus type=\"danger\">Rejected</LabelStatus>;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const { userInfo } = useAuth();\r\n  const handleDeleteUser = async (user) => {\r\n    if (userInfo?.role !== userRole.ADMIN) {\r\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\r\n      return;\r\n    }\r\n    const colRef = doc(db, \"users\", user.id);\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await deleteDoc(colRef);\r\n        toast.success(\"Delete user successfully\");\r\n        Swal.fire(\"Deleted!\", \"The user has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n  const renderUserItem = (user) => {\r\n    return (\r\n      <tr key={user.id}>\r\n        <td title={user.id}>{user.id.slice(0, 5) + \"...\"}</td>\r\n        <td className=\"whitespace-nowrap\">\r\n          <div className=\"flex items-center gap-x-3\">\r\n            <img\r\n              src={user?.avatar}\r\n              alt=\"\"\r\n              className=\"flex-shrink-0 object-cover w-10 h-10 rounded-md\"\r\n            />\r\n            <div className=\"flex-1\">\r\n              <h3>{user?.fullname}</h3>\r\n              <time className=\"text-sm text-gray-300\">\r\n                {new Date(user?.createdAt?.seconds * 1000).toLocaleDateString(\r\n                  \"vi-VI\"\r\n                )}\r\n              </time>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td>{user?.username}</td>\r\n        <td>{user?.email.slice(0, 5) + \"...\"}</td>\r\n        <td>{renderLabelStatus(Number(user?.status))}</td>\r\n        <td>{renderRoleLabel(Number(user.role))}</td>\r\n        <td>\r\n          <div className=\"flex items-center text-gray-500 gap-x-3\">\r\n            <ActionEdit\r\n              onClick={() => navigate(`/manage/update-user?id=${user.id}`)}\r\n            ></ActionEdit>\r\n            <ActionDelete onClick={() => handleDeleteUser(user)}></ActionDelete>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Info</th>\r\n            <th>Username</th>\r\n            <th>Email address</th>\r\n            <th>Status</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userList.length > 0 && userList.map((user) => renderUserItem(user))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import { Button } from \"components/button\";\r\nimport { useAuth } from \"contexts/auth-context\";\r\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\r\nimport React from \"react\";\r\nimport { userRole } from \"utils/constants\";\r\nimport UserTable from \"./UserTable\";\r\n\r\nconst UserManage = () => {\r\n  const { userInfo } = useAuth();\r\n  if (userInfo.role !== userRole.ADMIN) return null;\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"Users\"\r\n        desc=\"Manage your user\"\r\n      ></DashboardHeading>\r\n      <div className=\"flex justify-end mb-10\">\r\n        <Button kind=\"ghost\" to=\"/manage/add-user\">\r\n          Add new user\r\n        </Button>\r\n      </div>\r\n      <UserTable></UserTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManage;\r\n"],"names":["useState","userList","setUserList","navigate","useNavigate","useEffect","colRef","collection","db","onSnapshot","snapshot","results","forEach","doc","push","id","data","renderRoleLabel","role","userRole","renderLabelStatus","status","userStatus","type","userInfo","useAuth","handleDeleteUser","user","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteDoc","toast","length","map","slice","className","src","avatar","alt","fullname","Date","createdAt","seconds","toLocaleDateString","username","email","Number","onClick","renderUserItem","DashboardHeading","desc","kind","to"],"sourceRoot":""}